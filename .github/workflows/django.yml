name: Tests & Staging Deployment

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  black:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8, ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Black Check
        uses: jpetrucciani/black-check@19.10b0
        with:
          # File or directory to run black on
          path: .

  flake8:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8, ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
      - name: Setup flake8 annotations
        uses: rbialon/flake8-annotations@v1
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  Tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8, ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -V
        python -m pip install --upgrade pip
        python -m pip install -r src/requirements.txt
    - name: Run Tests
      run: |
        cd src
        python manage.py test
      env: # Or as an environment variable
        HUEB_SECRET_KEY: ${{ secrets.HUEB_SECRET_KEY }}

  StagingDeployment:
    needs: Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: deploy.yml
        directory: ./deployment
        key: ${{secrets.HUEB_STAGING_DEPLOYMENT_SSH_PRIVATE_KEY}}
        inventory-file: staging
        options: |
          --verbose

