# Generated by Django 3.0.5 on 2020-07-09 21:55

import re

from django.db import migrations
from psycopg2.extras import NumericRange


def load_authorNew(apps, schema_editor):
    Author_legacy = apps.get_model("hueb_legacy_latein", "AuthorNew")

    Person = apps.get_model("hueb20", "Person")
    YearRange = apps.get_model("hueb20", "YearRange")
    Source = apps.get_model("hueb20", "SourceReference")

    for legacy_author in Author_legacy.objects.all():
        source = Source()
        source.app = "hueb_legacy_latein"
        source.author_ref = legacy_author
        source.save()

        new_person = Person()
        new_person.source = source

        lifetime = parse_years(YearRange, legacy_author.name)
        lifetime.source = source
        lifetime.save()

        new_person.name = legacy_author.name
        new_person.comment = legacy_author.comment
        new_person.lifetime = lifetime
        new_person.save()


# matches everything between brackets
brackets = re.compile(r"\([\s\S]*\)")
# matches (1794-1849)
simple_range = re.compile(r"\(\d{4}-\d{4}\)")
# matches 1794
years_4 = re.compile(r"\d{4}")


def parse_years(YearRange, parse_string):
    lifetime = YearRange()
    bracket = brackets.search(parse_string)
    if bracket is not None:
        lifetime.parsed_string = bracket.group()

        if simple_range.match(lifetime.parsed_string):
            years = years_4.findall(lifetime.parsed_string)
            if len(years) == 2:
                timerange = NumericRange(int(years[0]), int(years[1]))
                lifetime.timerange = timerange

    return lifetime


def unload_authorNew(apps, schema_editor):
    Source = apps.get_model("hueb20", "SourceReference")
    Source.objects.filter(app="hueb_legacy_latein").filter(
        author_ref__isnull=False
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("hueb20", "0009_load_location"),
        ("hueb_legacy_latein", "0005_auto_20200709_2025"),
    ]

    operations = [migrations.RunPython(load_authorNew, unload_authorNew)]
